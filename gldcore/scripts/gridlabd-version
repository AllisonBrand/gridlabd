#!/bin/bash

EXE="$0"
function error()
{
	echo "$EXE: $*"
}

function help()
{
	cat <<-END
		Syntax: gridlabd version <command> <options...>
		Commands:
		  help              get this list of commands
		  check [-v|-q]     check for a newer version
		  list [<pattern>]  get a list of available versions
		  show              show the current active version
		  set [<pattern>]   set the active version
		  browse            browse the source code of the active version
	END
}

function check()
{
	head=$(gridlabd git commit HEAD sha)
	commit=$(gridlabd git commit $(gridlabd --version=commit) sha)
	if [ "$1" == "-v" ]; then
		echo "HEAD $head"
		echo "COMMIT $commit"
	fi
	if [ "$head" != "$commit" ]; then
		[ -z "$1" ] && echo "$(gridlabd --version) is outdated"
		exit 1
	else
		[ -z "$1" ] && echo "$(gridlabd --version) is latest"
		exit 0
	fi
}

function browse()
{
	open $(gridlabd git commit HEAD html_url | sed -e 's:/commit/:/tree/:')
}

function set()
{
	ln -sf /usr/local/opt/gridlabd/*$1* /usr/local/opt/gridlabd/current
	for F in bin lib share include; do
		[ ! -f /usr/local/$F/gridlabd ] && ln -sf /usr/local/opt/gridlabd/current/$F/gridlabd /usr/local/$F/gridlabd
	done
	[ ! -f /usr/local/bin/gridlabd.bin ] && ln -sf /usr/local/opt/gridlabd/current/bin/gridlabd.bin /usr/local/bin/gridlabd.bin
}

function show()
{
	if [ -L /usr/local/opt/gridlabd/current ]; then
		basename $(readlink /usr/local/opt/gridlabd/current)
	else
		echo "Current version is custom installed"
	fi
}

function list()
{
	if [ $# -eq 0 ]; then
		basename /usr/local/opt/gridlabd/* | grep -v '^current$'
	else
		basename /usr/local/opt/gridlabd/*$1*
	fi
}

if [ $# -eq 0 ]; then
	show
	exit 0
fi

case "$1" in 
	(help|browse|show|list|check|set)
		$*
		;;
	(*)
		error "$1 is not a valid command"
		;;
esac
